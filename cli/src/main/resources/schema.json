{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://lzgabel.com/process_definition.schema.json",
  "title": "Process Definition Schema",
  "description": "process definition schema",
  "type": "object",
  "required": [
    "nodes",
    "flows"
  ],
  "properties": {
    "processId": {
      "type": "string",
      "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,16}$"
    },
    "nodes": {
      "description": "The unique identifier for a product",
      "type": "array",
      "minItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Unique identifier for the node",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,16}$",
            "type": "string"
          },
          "name": {
            "description": "Name for the node",
            "type": "string"
          },
          "type": {
            "description": "Type for the node",
            "type": "string",
            "enum": [
              "startEvent",
              "endEvent",
              "serviceTask",
              "userTask",
              "scriptTask",
              "receiveTask",
              "manualTask",
              "businessRuleTask",
              "exclusiveGateway",
              "parallelGateway",
              "inclusiveGateway",
              "callActivity",
              "subProcess"
            ]
          }
        },
        "required": [
          "id",
          "name",
          "type"
        ],
        "if": {
          "properties": {
            "type": {
              "const": "startEvent"
            }
          }
        },
        "then": {
          "required": [
            "eventType"
          ],
          "properties": {
            "eventType": {
              "type": "string",
              "enum": [
                "none",
                "timer",
                "message"
              ]
            }
          },
          "allOf": [
            {
              "if": {
                "properties": {
                  "eventType": {
                    "const": "timer"
                  }
                }
              },
              "then": {
                "required": [
                  "timerDefinitionType",
                  "timerDefinition"
                ],
                "properties": {
                  "timerDefinitionType": {
                    "type": "string",
                    "enum": ["date", "duration", "cycle"]
                  },
                  "timerDefinition": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            },
            {
              "if": {
                "properties": {
                  "eventType": {
                    "const": "message"
                  }
                }
              },
              "then": {
                "required": [
                  "messageName"
                ],
                "properties": {
                  "messageName": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          ]
        }
      }
    },
    "flows": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "source": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,16}$"
          },
          "target": {
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9_-]{0,16}$"
          }
        },
        "required": [
          "source",
          "target"
        ]
      }
    }
  }
}
